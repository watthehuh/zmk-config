/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE        0
#define CMK_DH      1
#define NAV         2
#define NUM         3
#define SYM         4


&lt { // layer-tap
  tapping-term-ms = <200>;
  quick-tap-ms = <200>;
  flavor = "hold-preferred";
};

&sk { // sticky key
  release-after-ms = <500>;
  quick-release;
};


/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &hm LCTRL A &hm LGUI S &hm LALT D &hm LSHIFT F
            >;
        };
    };
};


    keymap {
      compatible = "zmk,keymap";

      default_layer {
        bindings = <
                      &kp TAB &kp W &kp E &kp R &kp T          &kp Y &kp U &kp I &kp O &kp P             
                      &kp A &kp S &kp D &kp F &kp G          &kp H &kp J &kp K &kp L &kp BSPC      
                      &kp LSHFT &kp X &kp C &kp V &kp B          &kp N &kp M &kp COMMA &kp DOT &kp SQT  
                      &none &lt NUM ESC &kp RET           &kp RET &kp SPACE &none
        >;
                                
        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
      };

      colemak_dh_layer {
        bindings = <
                      &kp Q &kp W &kp F &kp P &kp B          &kp J &kp L &kp U &kp Y &kp SQT             
                      &kp A &kp R &kp S &kp T &kp G          &kp M &kp N &kp E &kp I &kp O      
                      &kp Z &kp X &kp C &kp D &kp V          &kp K &kp H &kp COMMA &kp DOT &kp FSLH  
                      &none &lt NUM ESC &kp RET           &kp RET &kp SPACE &none

        >;
                                
        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
      };

   nav_layer {  // not being used
            bindings = <
                            &none &none &none &none &none           &none &none &none &none &none 
               &kp TAB &kp LEFT &kp UP &kp DOWN &kp RIGHT           &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp SEMI
       &kp LSHIFT &kp GRAVE &kp PG_UP &kp PG_DN &kp SPACE           &kp MINUS &kp EQUAL &kp COMMA &kp DOT &kp RSHIFT 
                                   &kp ESC &none &none           &kp SPACE &kp DEL &kp RALT 
        >;      
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>; 
      }; 

    num_layer {
                bindings = <
                    &kp N1 &kp N2 &kp N3 &kp N4 &kp N5           &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 
                    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0           &kp LBKT &kp MINUS &kp EQUAL &kp RBKT &kp SEMI 
      &kp LSHFT &sk LCTRL &sk LGUI &sk LALT &kp SPACE            &kp BSLH &kp SQT &kp COMMA &kp DOT &kp RSHIFT 
                                 &td_LGUI &none &kp RET           &kp RET &kp SPACE &td_RGUI 
                >;

        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

    };

    sym_layer { // not being used  
                bindings = <
        &kp LBRC &kp AMPS &kp ASTRK &kp UNDER &kp RBRC          &none &none &none &none &none   
      &kp COLON &kp DLLR &kp PRCNT &kp CARET &kp PLUS          &none &sk RALT &sk RGUI &sk RCTRL &sk RSHFT 
          &kp TILDE &kp EXCL &kp AT &kp HASH &kp PIPE          &none &none &none &none &none 
                                    &none &none &none          &none &none &none
                >;

        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        
    };
  }; 
};  

